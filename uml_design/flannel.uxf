<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1030</x>
      <y>350</y>
      <w>350</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
Backend
--
+ RegisterNetwork(context.Context, *sync.WaitGroup, 
*subnet.Config) (Network, error) }

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>630</x>
      <y>340</y>
      <w>350</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>UdpBackend
--
-sm: subnet.Manager
-extItface: *backend.ExternalInterface
--
+ RegisterNetwork(context.Context, *sync.WaitGroup, 
*subnet.Config) (Network, error) }</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>970</x>
      <y>380</y>
      <w>80</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>60.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1030</x>
      <y>500</y>
      <w>350</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
Network
--
+ Lease() *subnet.Lease
+ MTU() int
+ Run(ctx context.Context)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1190</x>
      <y>430</y>
      <w>200</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
依赖（只是在方法使用到了）</panel_attributes>
    <additional_attributes>10.0;70.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>620</x>
      <y>490</y>
      <w>350</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>udp.network
--
- SimpleNetwork
- name: string
- port: int
- ctl, ctl2, tun: *os.File
- sm subnet.Manager
- tunNet: ip.IP4Net
--
+ Lease() *subnet.Lease
+ MTU() int
+ Run(ctx context.Context)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>960</x>
      <y>530</y>
      <w>90</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>70.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>670</x>
      <y>750</y>
      <w>200</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>SimpleNetwork
--
+ SubnetLease *subnet.Lease
+ ExtIface    *ExternalInterface
--
+ Lease() *subnet.Lease
+ MTU() int
+ Run(ctx context.Context)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>760</x>
      <y>670</y>
      <w>150</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
基于内嵌实现的组合
作用类似继承</panel_attributes>
    <additional_attributes>10.0;80.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>860</x>
      <y>580</y>
      <w>200</w>
      <h>250</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>180.0;10.0;180.0;230.0;10.0;230.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>770</x>
      <y>430</y>
      <w>30</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
</panel_attributes>
    <additional_attributes>10.0;60.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1030</x>
      <y>160</y>
      <w>270</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
Manager
--
+ GetBackend(backendType string) 
(Backend, error)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>570</x>
      <y>140</y>
      <w>400</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>Manager
--
# kube-apiserver 的subnet manager或者etcd的
- sm:subnet.Manager 
- extIface: *ExternalInterface #与外界交互通信的interface
- active: map[string]Backend
#实际是全局变量，用于保存了不同backend类型的实例化函数
- constructors: make(map[string]BackendCtor)
--
+ GetBackend(backendType string) (Backend, error)
# 用于注册初始化函数，在实现里面由每种实现的init调用
+ Register(name string, ctor BackendCtor)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>960</x>
      <y>200</y>
      <w>90</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>70.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1150</x>
      <y>230</y>
      <w>200</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
依赖（只是在方法使用到了）</panel_attributes>
    <additional_attributes>10.0;120.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>490</x>
      <y>370</y>
      <w>160</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;140.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>70</x>
      <y>280</y>
      <w>430</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
subnet.Manager
--
# 获取flannel全网络配置信息
+ GetNetworkConfig(ctx context.Context) (*Config, error)
+ AcquireLease(ctx context.Context, attrs *LeaseAttrs) (*Lease, error)
+ RenewLease(ctx context.Context, lease *Lease) error
+ WatchLease(ctx context.Context, sn ip.IP4Net, cursor interface{}) (LeaseWatchResult, error)
+ WatchLeases(ctx context.Context, cursor interface{}) (LeaseWatchResult, error)
+ Name() string</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>40</x>
      <y>520</y>
      <w>160</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>etcdv2.LocalManager
--
# etcd仓库客户端
+ registry: Registry
+ previousSubnet: ip.IP4Net</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>100</x>
      <y>430</y>
      <w>160</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>140.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>270</x>
      <y>520</y>
      <w>250</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>kubeSubnetManager
--
# 往node的yaml文件中添加的annotations
+ annotations:annotations
# 与kube-apiserver交互的client
+ client: clientset.Interface
+ nodeName: string
+ nodeStore: listers.NodeLister
+ nodeController: cache.Controller
+ subnetConf: *subnet.Config
+ events:chan subnet.Event
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>230</x>
      <y>430</y>
      <w>160</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;140.0;90.0</additional_attributes>
  </element>
</diagram>
