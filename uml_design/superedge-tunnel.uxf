<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>330</x>
      <y>560</y>
      <w>170</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
NodeMng
--
AddNode(string) *node
GetNode(string) *node
RemoveNode(string)
GetNodes() []string
NodeIsExist(string) bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>330</x>
      <y>750</y>
      <w>170</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>nodeContext
--
nodes map[string]*node
nodeLock sync.RWMutex
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>410</x>
      <y>680</y>
      <w>30</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>500</x>
      <y>260</y>
      <w>100</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>Context
// 单例管理器
--
nodes NodeMng
conns ConnMng
protocol ProtocolContext
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>390</x>
      <y>370</y>
      <w>290</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
组合 (底层实现是nodeContext)</panel_attributes>
    <additional_attributes>10.0;190.0;150.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>550</y>
      <w>220</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
Node
--
Send2Node(*StreamMsg)
BindNode(uid string)
UbbindNode(uid string)
NodeRecv() &lt;-chan *StreamMsg
GetName() string
GetBindConns() []string</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>190</x>
      <y>620</y>
      <w>160</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
依赖</panel_attributes>
    <additional_attributes>10.0;200.0;140.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>10</x>
      <y>780</y>
      <w>190</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>node
--
name string
ch chan *StreamMsg
conns *[]string
connsLock sync.RWMutex</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>70</x>
      <y>680</y>
      <w>30</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>600</x>
      <y>560</y>
      <w>210</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
ConnMng
--
AddConn(uid string) *conn
GetConn(uid string) *conn
RemoveConn(uid string)
GetConns(name []string) []*conn
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>940</x>
      <y>570</y>
      <w>220</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
Conn
--
Send2Conn(msg *StreamMsg)
ConnRecv() &lt;-chan *StreamMsg
GetUid() string
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>800</x>
      <y>610</y>
      <w>200</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
依赖</panel_attributes>
    <additional_attributes>180.0;160.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>540</x>
      <y>370</y>
      <w>170</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>150.0;190.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>620</x>
      <y>750</y>
      <w>190</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>connConrtext
--
conns map[string]*conn</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>690</x>
      <y>660</y>
      <w>30</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>980</x>
      <y>740</y>
      <w>160</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>conn
--
uid string
ch chan *StreamMsg</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1030</x>
      <y>660</y>
      <w>30</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>480</x>
      <y>0</y>
      <w>150</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>TcpConn
--
Conn net.Conn
uid string
Type string
C context.Conn
n context.Node
Addr string
--
Write()
Read()
closeOpposite() // 让发送消息通知对端关闭</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>150</x>
      <y>170</y>
      <w>420</w>
      <h>400</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
组合，并通过uid让node与Conn关联</panel_attributes>
    <additional_attributes>10.0;380.0;400.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>540</x>
      <y>170</y>
      <w>450</w>
      <h>420</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
组合，并通过uid让node与Conn关联</panel_attributes>
    <additional_attributes>430.0;400.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>540</x>
      <y>170</y>
      <w>210</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
通过context操作node和conn</panel_attributes>
    <additional_attributes>10.0;90.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>20</x>
      <y>1000</y>
      <w>160</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>wrappedClientStream</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>90</x>
      <y>870</y>
      <w>270</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
会监听ch通道，不断从中读取Msg；
Msg是来自于TcpConn读取的数据调用
Send2Node传入的
读取到Msg之后会进行处理，最后通过
gRPC的SendMsg发送出去
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;130.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>1120</y>
      <w>200</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
grpc.ClientStream
--
SendMsg(m interface{}) error
RecvMsg(m interface{}) error
---
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>90</x>
      <y>1020</y>
      <w>200</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
内嵌并重载了
原本的clientStream的
SendMsg和RecvMsg方法
这两个方法都是一个死循环
一直不断接收和发送消息</panel_attributes>
    <additional_attributes>10.0;100.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>30</x>
      <y>1020</y>
      <w>90</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;100.0;70.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>170</x>
      <y>790</y>
      <w>1180</w>
      <h>250</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
同时这个grpcClient会接收来自grpc通道的消息
消息通过Context.Handler进行处理
调用conn.Send2Conn(通过topic可以选定conn)
从而让TcpConn里面通过C.RecvMsg接收到响应
再把响应的内容通过conn写入到原本的流里
</panel_attributes>
    <additional_attributes>860.0;10.0;860.0;230.0;10.0;220.0</additional_attributes>
  </element>
</diagram>
